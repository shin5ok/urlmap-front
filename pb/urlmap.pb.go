// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: urlmap.proto

package urlmap

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RedirectPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	NotifyTo string `protobuf:"bytes,2,opt,name=notify_to,json=notifyTo,proto3" json:"notify_to,omitempty"`
}

func (x *RedirectPath) Reset() {
	*x = RedirectPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlmap_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectPath) ProtoMessage() {}

func (x *RedirectPath) ProtoReflect() protoreflect.Message {
	mi := &file_urlmap_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectPath.ProtoReflect.Descriptor instead.
func (*RedirectPath) Descriptor() ([]byte, []int) {
	return file_urlmap_proto_rawDescGZIP(), []int{0}
}

func (x *RedirectPath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RedirectPath) GetNotifyTo() string {
	if x != nil {
		return x.NotifyTo
	}
	return ""
}

type OrgUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Org      string `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
	NotifyTo string `protobuf:"bytes,2,opt,name=notify_to,json=notifyTo,proto3" json:"notify_to,omitempty"`
	SlackUrl string `protobuf:"bytes,3,opt,name=slack_url,json=slackUrl,proto3" json:"slack_url,omitempty"`
	Email    string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *OrgUrl) Reset() {
	*x = OrgUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlmap_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgUrl) ProtoMessage() {}

func (x *OrgUrl) ProtoReflect() protoreflect.Message {
	mi := &file_urlmap_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgUrl.ProtoReflect.Descriptor instead.
func (*OrgUrl) Descriptor() ([]byte, []int) {
	return file_urlmap_proto_rawDescGZIP(), []int{1}
}

func (x *OrgUrl) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

func (x *OrgUrl) GetNotifyTo() string {
	if x != nil {
		return x.NotifyTo
	}
	return ""
}

func (x *OrgUrl) GetSlackUrl() string {
	if x != nil {
		return x.SlackUrl
	}
	return ""
}

func (x *OrgUrl) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	NotifyTo string `protobuf:"bytes,2,opt,name=notify_to,json=notifyTo,proto3" json:"notify_to,omitempty"`
	SlackUrl string `protobuf:"bytes,3,opt,name=slack_url,json=slackUrl,proto3" json:"slack_url,omitempty"`
	Email    string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlmap_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_urlmap_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_urlmap_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *User) GetNotifyTo() string {
	if x != nil {
		return x.NotifyTo
	}
	return ""
}

func (x *User) GetSlackUrl() string {
	if x != nil {
		return x.SlackUrl
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ArrayRedirectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Redirects []*RedirectData `protobuf:"bytes,1,rep,name=redirects,proto3" json:"redirects,omitempty"`
}

func (x *ArrayRedirectData) Reset() {
	*x = ArrayRedirectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlmap_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayRedirectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayRedirectData) ProtoMessage() {}

func (x *ArrayRedirectData) ProtoReflect() protoreflect.Message {
	mi := &file_urlmap_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayRedirectData.ProtoReflect.Descriptor instead.
func (*ArrayRedirectData) Descriptor() ([]byte, []int) {
	return file_urlmap_proto_rawDescGZIP(), []int{3}
}

func (x *ArrayRedirectData) GetRedirects() []*RedirectData {
	if x != nil {
		return x.Redirects
	}
	return nil
}

type RedirectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Redirect *RedirectInfo `protobuf:"bytes,1,opt,name=redirect,proto3" json:"redirect,omitempty"`
}

func (x *RedirectData) Reset() {
	*x = RedirectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlmap_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectData) ProtoMessage() {}

func (x *RedirectData) ProtoReflect() protoreflect.Message {
	mi := &file_urlmap_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectData.ProtoReflect.Descriptor instead.
func (*RedirectData) Descriptor() ([]byte, []int) {
	return file_urlmap_proto_rawDescGZIP(), []int{4}
}

func (x *RedirectData) GetRedirect() *RedirectInfo {
	if x != nil {
		return x.Redirect
	}
	return nil
}

type RedirectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User         string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	RedirectPath string `protobuf:"bytes,2,opt,name=redirectPath,proto3" json:"redirectPath,omitempty"`
	Org          string `protobuf:"bytes,3,opt,name=org,proto3" json:"org,omitempty"`
	Host         string `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Comment      string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Active       int32  `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *RedirectInfo) Reset() {
	*x = RedirectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlmap_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectInfo) ProtoMessage() {}

func (x *RedirectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_urlmap_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectInfo.ProtoReflect.Descriptor instead.
func (*RedirectInfo) Descriptor() ([]byte, []int) {
	return file_urlmap_proto_rawDescGZIP(), []int{5}
}

func (x *RedirectInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RedirectInfo) GetRedirectPath() string {
	if x != nil {
		return x.RedirectPath
	}
	return ""
}

func (x *RedirectInfo) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

func (x *RedirectInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RedirectInfo) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *RedirectInfo) GetActive() int32 {
	if x != nil {
		return x.Active
	}
	return 0
}

type Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *Users) Reset() {
	*x = Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlmap_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_urlmap_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_urlmap_proto_rawDescGZIP(), []int{6}
}

func (x *Users) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to ShowModeOneof:
	//	*Message_Mode
	//	*Message_Isresponse
	ShowModeOneof isMessage_ShowModeOneof `protobuf_oneof:"show_mode_oneof"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlmap_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_urlmap_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_urlmap_proto_rawDescGZIP(), []int{7}
}

func (x *Message) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Message) GetShowModeOneof() isMessage_ShowModeOneof {
	if m != nil {
		return m.ShowModeOneof
	}
	return nil
}

func (x *Message) GetMode() string {
	if x, ok := x.GetShowModeOneof().(*Message_Mode); ok {
		return x.Mode
	}
	return ""
}

func (x *Message) GetIsresponse() bool {
	if x, ok := x.GetShowModeOneof().(*Message_Isresponse); ok {
		return x.Isresponse
	}
	return false
}

type isMessage_ShowModeOneof interface {
	isMessage_ShowModeOneof()
}

type Message_Mode struct {
	Mode string `protobuf:"bytes,2,opt,name=mode,proto3,oneof"`
}

type Message_Isresponse struct {
	Isresponse bool `protobuf:"varint,3,opt,name=isresponse,proto3,oneof"`
}

func (*Message_Mode) isMessage_ShowModeOneof() {}

func (*Message_Isresponse) isMessage_ShowModeOneof() {}

type RedirectData_ValidDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Begin string `protobuf:"bytes,1,opt,name=begin,proto3" json:"begin,omitempty"`
	End   string `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *RedirectData_ValidDate) Reset() {
	*x = RedirectData_ValidDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_urlmap_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectData_ValidDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectData_ValidDate) ProtoMessage() {}

func (x *RedirectData_ValidDate) ProtoReflect() protoreflect.Message {
	mi := &file_urlmap_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectData_ValidDate.ProtoReflect.Descriptor instead.
func (*RedirectData_ValidDate) Descriptor() ([]byte, []int) {
	return file_urlmap_proto_rawDescGZIP(), []int{4, 0}
}

func (x *RedirectData_ValidDate) GetBegin() string {
	if x != nil {
		return x.Begin
	}
	return ""
}

func (x *RedirectData_ValidDate) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

var File_urlmap_proto protoreflect.FileDescriptor

var file_urlmap_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x75, 0x72, 0x6c, 0x6d, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x75, 0x72, 0x6c, 0x6d, 0x61, 0x70, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x54, 0x6f, 0x22, 0x6a, 0x0a, 0x06, 0x4f, 0x72, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0x6a, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6c, 0x61,
	0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6c,
	0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x47, 0x0a, 0x11,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x32, 0x0a, 0x09, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x72, 0x6c, 0x6d, 0x61, 0x70, 0x2e, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x73, 0x22, 0x75, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x72, 0x6c, 0x6d, 0x61, 0x70,
	0x2e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x1a, 0x33, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x9e, 0x01, 0x0a,
	0x0c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x2b, 0x0a,
	0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x72, 0x6c, 0x6d, 0x61, 0x70, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x68, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0a, 0x69, 0x73, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x73, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x11, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x6f,
	0x6e, 0x65, 0x6f, 0x66, 0x32, 0x80, 0x03, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x42, 0x79,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x2e, 0x75, 0x72, 0x6c, 0x6d, 0x61, 0x70, 0x2e, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x0e, 0x2e, 0x75, 0x72, 0x6c,
	0x6d, 0x61, 0x70, 0x2e, 0x4f, 0x72, 0x67, 0x55, 0x72, 0x6c, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0c, 0x2e,
	0x75, 0x72, 0x6c, 0x6d, 0x61, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x19, 0x2e, 0x75, 0x72,
	0x6c, 0x6d, 0x61, 0x70, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x2e, 0x75, 0x72, 0x6c, 0x6d, 0x61, 0x70, 0x2e, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x0e, 0x2e, 0x75, 0x72, 0x6c, 0x6d,
	0x61, 0x70, 0x2e, 0x4f, 0x72, 0x67, 0x55, 0x72, 0x6c, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x07, 0x53,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0c, 0x2e, 0x75, 0x72, 0x6c, 0x6d, 0x61, 0x70, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x1a, 0x0c, 0x2e, 0x75, 0x72, 0x6c, 0x6d, 0x61, 0x70, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x0c, 0x2e, 0x75, 0x72, 0x6c, 0x6d, 0x61, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x0d, 0x2e, 0x75, 0x72, 0x6c, 0x6d, 0x61, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x00,
	0x12, 0x35, 0x0a, 0x0f, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x0f, 0x2e, 0x75, 0x72, 0x6c, 0x6d, 0x61, 0x70, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x0f, 0x2e, 0x75, 0x72, 0x6c, 0x6d, 0x61, 0x70, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x69, 0x6e, 0x35, 0x6f, 0x6b, 0x2f, 0x75, 0x72,
	0x6c, 0x6d, 0x61, 0x70, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x75, 0x72, 0x6c, 0x6d,
	0x61, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_urlmap_proto_rawDescOnce sync.Once
	file_urlmap_proto_rawDescData = file_urlmap_proto_rawDesc
)

func file_urlmap_proto_rawDescGZIP() []byte {
	file_urlmap_proto_rawDescOnce.Do(func() {
		file_urlmap_proto_rawDescData = protoimpl.X.CompressGZIP(file_urlmap_proto_rawDescData)
	})
	return file_urlmap_proto_rawDescData
}

var file_urlmap_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_urlmap_proto_goTypes = []interface{}{
	(*RedirectPath)(nil),           // 0: urlmap.RedirectPath
	(*OrgUrl)(nil),                 // 1: urlmap.OrgUrl
	(*User)(nil),                   // 2: urlmap.User
	(*ArrayRedirectData)(nil),      // 3: urlmap.ArrayRedirectData
	(*RedirectData)(nil),           // 4: urlmap.RedirectData
	(*RedirectInfo)(nil),           // 5: urlmap.RedirectInfo
	(*Users)(nil),                  // 6: urlmap.Users
	(*Message)(nil),                // 7: urlmap.Message
	(*RedirectData_ValidDate)(nil), // 8: urlmap.RedirectData.ValidDate
	(*emptypb.Empty)(nil),          // 9: google.protobuf.Empty
}
var file_urlmap_proto_depIdxs = []int32{
	4,  // 0: urlmap.ArrayRedirectData.redirects:type_name -> urlmap.RedirectData
	5,  // 1: urlmap.RedirectData.redirect:type_name -> urlmap.RedirectInfo
	2,  // 2: urlmap.Users.users:type_name -> urlmap.User
	0,  // 3: urlmap.Redirection.GetOrgByPath:input_type -> urlmap.RedirectPath
	2,  // 4: urlmap.Redirection.GetInfoByUser:input_type -> urlmap.User
	4,  // 5: urlmap.Redirection.SetInfo:input_type -> urlmap.RedirectData
	2,  // 6: urlmap.Redirection.SetUser:input_type -> urlmap.User
	2,  // 7: urlmap.Redirection.RemoveUser:input_type -> urlmap.User
	9,  // 8: urlmap.Redirection.ListUsers:input_type -> google.protobuf.Empty
	7,  // 9: urlmap.Redirection.PingPongMessage:input_type -> urlmap.Message
	1,  // 10: urlmap.Redirection.GetOrgByPath:output_type -> urlmap.OrgUrl
	3,  // 11: urlmap.Redirection.GetInfoByUser:output_type -> urlmap.ArrayRedirectData
	1,  // 12: urlmap.Redirection.SetInfo:output_type -> urlmap.OrgUrl
	2,  // 13: urlmap.Redirection.SetUser:output_type -> urlmap.User
	9,  // 14: urlmap.Redirection.RemoveUser:output_type -> google.protobuf.Empty
	6,  // 15: urlmap.Redirection.ListUsers:output_type -> urlmap.Users
	7,  // 16: urlmap.Redirection.PingPongMessage:output_type -> urlmap.Message
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_urlmap_proto_init() }
func file_urlmap_proto_init() {
	if File_urlmap_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_urlmap_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlmap_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlmap_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlmap_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayRedirectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlmap_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlmap_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlmap_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlmap_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_urlmap_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectData_ValidDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_urlmap_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Message_Mode)(nil),
		(*Message_Isresponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_urlmap_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_urlmap_proto_goTypes,
		DependencyIndexes: file_urlmap_proto_depIdxs,
		MessageInfos:      file_urlmap_proto_msgTypes,
	}.Build()
	File_urlmap_proto = out.File
	file_urlmap_proto_rawDesc = nil
	file_urlmap_proto_goTypes = nil
	file_urlmap_proto_depIdxs = nil
}
